// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BoundingSphere.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_BoundingSphere_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_BoundingSphere_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_BoundingSphere_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_BoundingSphere_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
class BoundingSphere_proto;
struct BoundingSphere_protoDefaultTypeInternal;
extern BoundingSphere_protoDefaultTypeInternal _BoundingSphere_proto_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::BoundingSphere_proto* Arena::CreateMaybeMessage<::BoundingSphere_proto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class BoundingSphere_proto final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:BoundingSphere_proto) */ {
 public:
  inline BoundingSphere_proto() : BoundingSphere_proto(nullptr) {}
  ~BoundingSphere_proto() override;
  explicit constexpr BoundingSphere_proto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BoundingSphere_proto(const BoundingSphere_proto& from);
  BoundingSphere_proto(BoundingSphere_proto&& from) noexcept
    : BoundingSphere_proto() {
    *this = ::std::move(from);
  }

  inline BoundingSphere_proto& operator=(const BoundingSphere_proto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoundingSphere_proto& operator=(BoundingSphere_proto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const BoundingSphere_proto& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoundingSphere_proto* internal_default_instance() {
    return reinterpret_cast<const BoundingSphere_proto*>(
               &_BoundingSphere_proto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BoundingSphere_proto& a, BoundingSphere_proto& b) {
    a.Swap(&b);
  }
  inline void Swap(BoundingSphere_proto* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoundingSphere_proto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BoundingSphere_proto* New() const final {
    return new BoundingSphere_proto();
  }

  BoundingSphere_proto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BoundingSphere_proto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const BoundingSphere_proto& from);
  void MergeFrom(const BoundingSphere_proto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BoundingSphere_proto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BoundingSphere_proto";
  }
  protected:
  explicit BoundingSphere_proto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoDataFieldNumber = 1,
    kRadFieldNumber = 2,
  };
  // repeated float poData = 1;
  int podata_size() const;
  private:
  int _internal_podata_size() const;
  public:
  void clear_podata();
  private:
  float _internal_podata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_podata() const;
  void _internal_add_podata(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_podata();
  public:
  float podata(int index) const;
  void set_podata(int index, float value);
  void add_podata(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      podata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_podata();

  // optional float rad = 2;
  bool has_rad() const;
  private:
  bool _internal_has_rad() const;
  public:
  void clear_rad();
  float rad() const;
  void set_rad(float value);
  private:
  float _internal_rad() const;
  void _internal_set_rad(float value);
  public:

  // @@protoc_insertion_point(class_scope:BoundingSphere_proto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > podata_;
  float rad_;
  friend struct ::TableStruct_BoundingSphere_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoundingSphere_proto

// repeated float poData = 1;
inline int BoundingSphere_proto::_internal_podata_size() const {
  return podata_.size();
}
inline int BoundingSphere_proto::podata_size() const {
  return _internal_podata_size();
}
inline void BoundingSphere_proto::clear_podata() {
  podata_.Clear();
}
inline float BoundingSphere_proto::_internal_podata(int index) const {
  return podata_.Get(index);
}
inline float BoundingSphere_proto::podata(int index) const {
  // @@protoc_insertion_point(field_get:BoundingSphere_proto.poData)
  return _internal_podata(index);
}
inline void BoundingSphere_proto::set_podata(int index, float value) {
  podata_.Set(index, value);
  // @@protoc_insertion_point(field_set:BoundingSphere_proto.poData)
}
inline void BoundingSphere_proto::_internal_add_podata(float value) {
  podata_.Add(value);
}
inline void BoundingSphere_proto::add_podata(float value) {
  _internal_add_podata(value);
  // @@protoc_insertion_point(field_add:BoundingSphere_proto.poData)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
BoundingSphere_proto::_internal_podata() const {
  return podata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
BoundingSphere_proto::podata() const {
  // @@protoc_insertion_point(field_list:BoundingSphere_proto.poData)
  return _internal_podata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
BoundingSphere_proto::_internal_mutable_podata() {
  return &podata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
BoundingSphere_proto::mutable_podata() {
  // @@protoc_insertion_point(field_mutable_list:BoundingSphere_proto.poData)
  return _internal_mutable_podata();
}

// optional float rad = 2;
inline bool BoundingSphere_proto::_internal_has_rad() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool BoundingSphere_proto::has_rad() const {
  return _internal_has_rad();
}
inline void BoundingSphere_proto::clear_rad() {
  rad_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float BoundingSphere_proto::_internal_rad() const {
  return rad_;
}
inline float BoundingSphere_proto::rad() const {
  // @@protoc_insertion_point(field_get:BoundingSphere_proto.rad)
  return _internal_rad();
}
inline void BoundingSphere_proto::_internal_set_rad(float value) {
  _has_bits_[0] |= 0x00000001u;
  rad_ = value;
}
inline void BoundingSphere_proto::set_rad(float value) {
  _internal_set_rad(value);
  // @@protoc_insertion_point(field_set:BoundingSphere_proto.rad)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_BoundingSphere_2eproto
