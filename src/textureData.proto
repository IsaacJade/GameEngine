syntax = "proto3";

option optimize_for = LITE_RUNTIME;

message textureData_proto
{

	enum TEXTURE_EFORMAT
	{
		EFORMAT_BGR = 0;
		EFORMAT_RGB = 1;
		EFORMAT_RGBA = 2;
	};

	enum TEXTURE_NCOMPONENT
	{
		NCOMPONENT_BGR = 0;
		NCOMPONENT_RGB = 1;
		NCOMPONENT_RGBA = 2;
	};

	enum TEXTURE_TYPE
	{
		JPEG = 0;
		PNG = 1;
		BMP = 2;
		GIF = 3;
		TGA = 4;
	};

	enum TEXTURE_MAG_FILTER
	{
		MAG_NEAREST = 0;
		MAG_LINEAR = 1;
	};

	enum TEXTURE_MIN_FILTER
	{
		MIN_NEAREST = 0;
		MIN_LINEAR = 1;
		MIN_NEAREST_MIPMAP_NEAREST = 2;
		MIN_LINEAR_MIPMAP_NEAREST = 3;
		MIN_NEAREST_MIPMAP_LINEAR = 4;
		MIN_LINEAR_MIPMAP_LINEAR = 5;
	};

	enum TEXTURE_WRAP
	{
		WRAP_CLAMP_TO_EDGE = 0;
		WRAP_MIRRORED_REPEAT = 1;
		WRAP_REPEAT = 2;
	};

	enum TEXTURE_COMPONENT
	{
		BYTE = 0;
		UNSIGNED_BYTE = 1;
		SHORT = 2;
		UNSIGNED_SHORT = 3;
		INT = 4;
		UNSIGNED_INT = 5;
		FLOAT = 6;
		DOUBLE = 7;
	};

	optional uint32              enabled      = 1;
	optional TEXTURE_TYPE        textType     = 2;
	optional TEXTURE_MAG_FILTER  magFilter    = 3;
	optional TEXTURE_MIN_FILTER  minFilter    = 4;
	optional TEXTURE_WRAP        wrapS        = 5;
	optional TEXTURE_WRAP        wrapT        = 6;
	optional TEXTURE_EFORMAT     eFormat      = 7;
	optional TEXTURE_NCOMPONENT  nComponent   = 8;
	optional uint32              width        = 9;
	optional uint32              height       = 10;
	optional uint32              component    = 11;
	optional uint32              bits         = 12;
	optional uint32              as_is        = 13;
	optional TEXTURE_COMPONENT   pixel_type   = 14;
	optional uint32              fileNameSize = 15;
	optional bytes               fileNameData = 16;
	optional uint32              dataSize     = 17;
	repeated uint32				 md5          = 18; 
	optional bytes               poData       = 19;

}
